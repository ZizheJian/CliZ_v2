for dimension_num in [1,2,3,4]:
	file=open(f"change_err_bound_{dimension_num}D.cpp","w")
	file.write(f"#ifndef __CHANGE_ERR_BOUND_{dimension_num}D_CPP__\n")
	file.write(f"#define __CHANGE_ERR_BOUND_{dimension_num}D_CPP__\n")
	file.write("\n")
	file.write("#include \"change_err_bound.hpp2\"\n")
	file.write("\n")
	file.write("namespace cliz\n")
	file.write("{\n")
	file.write("	template<typename T>\n")
	file.write(f"	void task_c<T>::change_err_bound_{dimension_num}D()\n")
	file.write("	{\n")
	file.write("		if (strcmp(err_type,\"REL\")==0)\n")
	file.write("		{\n")
	file.write("			new_data(data,data_num);\n")
	file.write("			in_file=fopen(in_file_path,\"rb\");\n")
	file.write("			fread(data,sizeof(T),data_num,in_file);\n")
	file.write("			fclose(in_file);\n")
	file.write("			T data_mn=numeric_limits<T>::max();\n")
	file.write("			T data_mx=numeric_limits<T>::min();\n")
	file.write("			long long *mx=it2->mx;\n")
	file.write("			long long *weight=it2->weight;\n")
	for i in range(dimension_num):
		file.write("	"*(i+3)+f"for (long long i{i}=0;i{i}<mx[{i}];i{i}++)\n")
	tabs="	"*(dimension_num+2)
	file.write(tabs+"{\n")
	file.write(tabs+"	long long pos=")
	for i in range(dimension_num-1):
		file.write(f"i{i}*weight[{i}]+")
	file.write(f"i{dimension_num-1};\n")
	file.write(tabs+"	if (data[pos]<data_mn)\n")
	file.write(tabs+"		data_mn=data[pos];\n")
	file.write(tabs+"	if (data[pos]>data_mx)\n")
	file.write(tabs+"		data_mx=data[pos];\n")
	file.write(tabs+"}\n")
	file.write("			err_bound=(data_mx-data_mn)*err_bound;\n")
	file.write("		}\n")
	file.write("	}\n")
	file.write("}\n")
	file.write("\n")
	file.write("#endif")
	file.close()